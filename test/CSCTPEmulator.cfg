# Configuration file to unpack CSC digis, run Trigger Primitives emulator,
# and compare LCTs in the data with LCTs found by the emulator.
# Slava Valuev; October, 2006.

process CSCTPEmulator = {
#    source = NewEventStreamFileReader {
##	string fileName = "file:/tmp/slava/mtcc.00002571.A.testStorageManager_0.0.dat"
#	untracked vstring fileNames = {
##	    "file:/tmp/slava/mtcc.00003797.A.testStorageManager_0.0.dat"
##	    "file:/tmp/slava/mtcc.00003999.A.testStorageManager_0.0.dat"
##	    "file:/tmp/slava/mtcc.00004022.A.testStorageManager_0.0.dat"
##	    "file:/tmp/slava/mtcc.00004062.A.testStorageManager_0.0.dat"
#	    "file:/tmp/slava/mtcc.00004138.A.testStorageManager_0.0.dat"
#	}
#        int32 max_event_size = 7000000
#        int32 max_queue_depth = 5
#    }

    untracked PSet maxEvents = {untracked int32 input = 10000}

    source = PoolSource {
#	untracked vstring fileNames = {"file:/data0/slava/data/mtcc.00004138.A.testStorageManager_0.0_reprocessed.root"}
#	untracked vstring fileNames = {"file:/data0/slava/data/csc_00000566.root"}
	untracked vstring fileNames = {"file:/data0/slava/data/csc_00014419.root"}
        untracked uint32 debugVebosity = 10
        untracked bool   debugFlag     = false
#	untracked uint32 skipEvents    = 2370
    }

# es_source of ideal geometry
# ===========================
# endcap muon only...
    include "Geometry/MuonCommonData/data/muonEndcapIdealGeometryXML.cfi"

# Needed according to Mike Case's e-mail from 27/03.
    include "Geometry/MuonNumbering/data/muonNumberingInitialization.cfi"

# flags for modelling of CSC geometry
# ===================================
    include "Geometry/CSCGeometry/data/cscGeometry.cfi"

# magnetic field (do I need it?)
# ==============================
    include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"

    service = MessageLogger {
	untracked vstring destinations = {"debug.txt"}
	untracked PSet debug.txt = {
	    untracked string threshold = "DEBUG"
#	    untracked string threshold = "WARNING"
	    untracked int32 lineLength = 132
	    untracked bool noLineBreaks = true
	} 
#        untracked vstring debugModules = {  "*"  }
	untracked vstring debugModules = { "l1CscTpgEmulDigis", "lctreader" }
    }

# CSC raw --> digi unpacker
# =========================
    module cscunpacker = CSCDCCUnpacker {
        untracked bool Debug = false
        untracked bool PrintEventNumber = false
        FileInPath theMappingFile = "CondFormats/CSCObjects/data/csc_slice_test_map.txt"
        untracked bool UseExaminer = false
        untracked uint32 ExaminerMask = 0x7FB7BF6
#        untracked uint32 ExaminerMask = 0x7FF7BF6
	untracked bool UnpackStatusDigis = false
	# default
        untracked uint32 ErrorMask = 0xDFCFEFFF
	# only for run 566
#	untracked uint32 ErrorMask=0x0
	# Define input to the unpacker
	#InputTag InputObjects = cscpacker:CSCRawData
	InputTag InputObjects = source
	# MTCC data flag
	untracked bool isMTCCData = false
    }

# CSC Trigger Primitives configuration
# ====================================
    include "L1TriggerConfig/L1CSCTPConfigProducers/data/L1CSCTriggerPrimitivesConfig.cff"
    replace l1csctpconf.isMTCC = true

# CSC Trigger Primitives emulator
# ===============================
    include "L1Trigger/CSCTriggerPrimitives/data/l1CscTpgEmulDigis.cfi"
    replace l1CscTpgEmulDigis.commonParam.isMTCC = true
    replace l1CscTpgEmulDigis.alctParamMTCC2.verbosity = 2
    replace l1CscTpgEmulDigis.clctParamMTCC2.verbosity = 2
    replace l1CscTpgEmulDigis.tmbParam.verbosity       = 2
#- For cosmic data
    replace l1CscTpgEmulDigis.CSCComparatorDigiProducer = cscunpacker:MuonCSCComparatorDigi
    replace l1CscTpgEmulDigis.CSCWireDigiProducer       = cscunpacker:MuonCSCWireDigi

# CSC Trigger Primitives reader
# =============================
    include "L1Trigger/CSCTriggerPrimitives/test/CSCTriggerPrimitivesReader.cfi"
    replace lctreader.debug      = true
    replace lctreader.isMTCCData = false

# Auxiliary services
# ==================
#    service = Timing { }
#    service = SimpleMemoryCheck { }
#    service = EnableFloatingPointExceptions {}
#    service = Tracer {}

# Output
# ======
    module out = PoolOutputModule {
#	untracked string fileName = "/data0/slava/test/lcts_4138.root"
#	untracked string fileName = "/data0/slava/test/lcts_566l.root"
	untracked string fileName = "/data0/slava/test/lcts_14419l.root"
	untracked vstring outputCommands = {
	    "keep *",
	    "drop *_DaqSource_*_*"
	}
    }

# scheduler path
# ==============
    path p = {cscunpacker, l1CscTpgEmulDigis, lctreader}
    endpath ep = {out}
}
