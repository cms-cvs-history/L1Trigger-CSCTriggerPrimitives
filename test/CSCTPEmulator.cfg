# Configuration file to unpack CSC digis, run Trigger Primitives emulator,
# and compare LCTs in the data with LCTs found by the emulator.
# Slava Valuev; October, 2006.

process CSCTPEmulator = {
#    source = NewEventStreamFileReader {
##	string fileName = "/tmp/slava/mtcc.00002571.A.testStorageManager_0.0.dat"
#	untracked vstring fileNames = {
##	    "/tmp/slava/mtcc.00003797.A.testStorageManager_0.0.dat"
##	    "/tmp/slava/mtcc.00003999.A.testStorageManager_0.0.dat"
##	    "/tmp/slava/mtcc.00004022.A.testStorageManager_0.0.dat"
##	    "/tmp/slava/mtcc.00004062.A.testStorageManager_0.0.dat"
#	    "/tmp/slava/mtcc.00004138.A.testStorageManager_0.0.dat"
#	}
#        untracked int32 maxEvents = 10000
#        int32 max_event_size = 7000000
#        int32 max_queue_depth = 5
#    }

    source = PoolSource {
	untracked vstring fileNames = {'file:/tmp/slava/mtcc.00004062.A.testStorageManager_0.0.root'}
        untracked int32  maxEvents = 10000
        untracked uint32 debugVebosity = 10
        untracked bool   debugFlag     = false
    }

# es_source of ideal geometry
# ===========================
# endcap muon only...
    include "Geometry/MuonCommonData/data/muonEndcapIdealGeometryXML.cfi"

# flags for modelling of CSC geometry
# ===================================
    include "Geometry/CSCGeometry/data/cscGeometry.cfi"

# magnetic field (do I need it?)
# ==============================
    include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"

    service = MessageLogger {
	untracked vstring destinations = {"debug.txt"}
	untracked PSet debug.txt = {
	    untracked string threshold = "DEBUG"
	    untracked int32 lineLength = 132
	    untracked bool noLineBreaks = true
	} 
#        untracked vstring debugModules = {  "*"  }
	untracked vstring debugModules = { "lctproducer", "lctreader" }
    }

# CSC raw --> digi unpacker
# =========================
    module cscunpacker = CSCDCCUnpacker {
        untracked bool Debug = false
        untracked bool PrintEventNumber = false
        FileInPath theMappingFile = "CondFormats/CSCObjects/data/csc_slice_test_map.txt"
        untracked bool UseExaminer = true
        untracked uint32 ErrorMask = 0xDFCFEFFF
        untracked uint32 ExaminerMask = 0x7FB7BF6
#        untracked uint32 ExaminerMask = 0x7FF7BF6
    }

# CSC Trigger Primitives emulator
# ===============================
    include "L1Trigger/CSCTriggerPrimitives/data/CSCTriggerPrimitivesProducer.cfi"
    replace lctproducer.alctParam.verbosity = 2
    replace lctproducer.clctParam.verbosity = 2
    replace lctproducer.tmbParam.verbosity  = 2
#- For cosmic data
    replace lctproducer.CSCComparatorDigiProducer = cscunpacker:MuonCSCComparatorDigi
    replace lctproducer.CSCWireDigiProducer       = cscunpacker:MuonCSCWireDigi
#    replace lctproducer.alctParam.alctTrigMode    = 2

# CSC Trigger Primitives reader
# =============================
    module lctreader = CSCTriggerPrimitivesReader {
# Switch on/off the verbosity
        untracked bool debug = true
# Label to retrieve LCTs from the event for histograms
#-- produced by emulator
#        untracked string CSCTriggerPrimitivesProducer = "lctproducer"
#-- produced by unpacker
	untracked string CSCTriggerPrimitivesProducer = "cscunpacker"
# Labels to retrieve comparator and wire digis (MC only)
        InputTag CSCComparatorDigiProducer = muonCSCDigis:MuonCSCComparatorDigi
        InputTag CSCWireDigiProducer       = muonCSCDigis:MuonCSCWireDigi
    }

# Auxiliary services
# ==================
#    service = Timing { }
#    service = SimpleMemoryCheck { }
#    service = EnableFloatingPointExceptions {}
#    service = Tracer {}

# Output
# ======
    module out = PoolOutputModule {
#	untracked string fileName = "/data0/slava/test/lcts_2571.root"
#	untracked string fileName = "/data0/slava/test/lcts_3797.root"
#	untracked string fileName = "/data0/slava/test/lcts_3999.root"
#	untracked string fileName = "/data0/slava/test/lcts_4022.root"
	untracked string fileName = "/data0/slava/test/lcts_4062.root"
#	untracked string fileName = "/data0/slava/test/lcts_4138.root"
	untracked vstring outputCommands = {
	    "keep *",
	    "drop *_DaqSource_*_*"
	}
    }

# scheduler path
# ==============
    path p = {cscunpacker, lctproducer, lctreader}
    endpath ep = {out}
}
