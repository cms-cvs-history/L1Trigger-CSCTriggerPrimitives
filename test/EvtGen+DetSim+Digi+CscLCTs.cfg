process PROD  = {

    untracked PSet maxEvents = {untracked int32 input = 1000}

    untracked PSet configurationMetadata = {
	untracked string version = "$Revision: 1.7 $"
	untracked string name = "$Source: /cvs_server/repositories/CMSSW/CMSSW/L1Trigger/CSCTriggerPrimitives/test/EvtGen+DetSim+Digi+CscLCTs.cfg,v $"
	untracked string annotation = "SV: single particle gun mu- 50 GeV"
    }

    service = MessageLogger {
	untracked vstring destinations = {"cout"}
	untracked vstring categories = { "FwkJob" }
	untracked PSet cout = {
	    ## untracked PSet default = { untracked int32 limit = 0 }  # kill all messages in the log
	    ## untracked PSet FwkJob  = { untracked int32 limit = -1 } # except *all* of FwkJob's
	    # untracked string threshold = "DEBUG"
	    untracked string threshold = "INFO"
	}

	# turn on the following to get LogDebug output
	# ============================================
	# untracked vstring debugModules = { "cscTriggerPrimitiveDigis" }
	## untracked vstring fwkJobReports = {"FrameworkJobReport.xml"}
    }

    # service = Timing {}

    service = RandomNumberGeneratorService {
	untracked uint32 sourceSeed = 15932458
	PSet moduleSeeds = {
	    untracked uint32 VtxSmeared = 48543987
	    untracked uint32 g4SimHits = 9876
            untracked uint32 simMuonCSCDigis = 468
	    untracked uint32 simMuonDTDigis  = 468
	    untracked uint32 simMuonRPCDigis = 468
	}
    }
    # Event Generation.  Single muons
    #
    include "SimGeneral/HepPDTESSource/data/pythiapdt.cfi"

    source = FlatRandomPtGunSource {
	untracked PSet PGunParameters = {
	    # you can request more than 1 particle
	    # untracked vint32  PartID = {211,11}
	    untracked vint32 PartID = { 13 }
	    untracked double MinEta = -2.5
	    untracked double MaxEta =  2.5
	    untracked double MinPhi = -3.14159265358979323846 # must be in rads
	    untracked double MaxPhi =  3.14159265358979323846
	    untracked double MinPt  = 49.99
	    untracked double MaxPt  = 50.01
	}
	untracked int32 Verbosity = 0 # set to 1 (or greater)  for printouts
    }

    include "Configuration/StandardSequences/data/FakeConditions.cff"
    #include "Configuration/StandardSequences/data/FrontierConditions.cff"

    # Event vertex smearing - applies only once (internal check)
    # Note : all internal generators will always do (0,0,0) vertex
    #
    include "Configuration/StandardSequences/data/VtxSmearedGauss.cff"

    include "Configuration/StandardSequences/data/Simulation.cff"
    include "Configuration/StandardSequences/data/MixingNoPileUp.cff"

    include "Configuration/StandardSequences/data/Reconstruction.cff"
    #include "RecoLocalTracker/Configuration/data/RecoLocalTracker.cff"
    #include "RecoLocalMuon/Configuration/data/RecoLocalMuon.cff"
    #include "RecoLocalCalo/Configuration/data/RecoLocalCalo.cff"
    #sequence localreco =  {trackerlocalreco, muonlocalreco, calolocalreco }

    # csc trigger primitives
    #=======================
    #include "L1Trigger/CSCTriggerPrimitives/data/cscTriggerPrimitiveDigis.cfi"
    #replace cscTriggerPrimitiveDigis.alctParamDef.verbosity = 2
    #replace cscTriggerPrimitiveDigis.clctParamDef.verbosity = 2
    #replace cscTriggerPrimitiveDigis.tmbParam.verbosity     = 2

    # Output module
    #
    module GENSIMDIGI = PoolOutputModule {
	untracked string fileName = "/data0/slava/test/muminus_pt50_CMSSW_2_1_0_pre5.root"
	untracked vstring outputCommands = {
	    "keep *",
#            "drop *_simSiPixelDigis_*_*",
#            "drop *_simSiStripDigis_*_*",
#            "drop *_simEcalUnsuppressedDigis_*_*",
#            "drop *_simHcalDigis_*_*",
##            "drop *_simMuonCSCDigis_*_*",
	    "drop *_simMuonDTDigis_*_*",
	    "drop *_simMuonRPCDigis_*_*",
	    "drop PSimHits_*_*_*",
	    "keep PSimHits_*_MuonCSCHits_*",
	    "drop PCaloHits_*_*_*"
	}
    }

    # Now order modules for execution
    #
    #sequence trDigi = {  simSiPixelDigis & simSiStripDigis }
    #sequence calDigi = { ecalUnsuppressedDigis & hcalDigis }
    #sequence muonDigi = { simMuonCSCDigis &  simMuonDTDigis & simMuonRPCDigis}
    #sequence doDigi = { trDigi & calDigi & muonDigi }
    #path p1 = { VtxSmeared, g4SimHits, mix, muonDigi, cscTriggerPrimitiveDigis }
    path p1 = { VtxSmeared, g4SimHits, mix, muonDigi }
    #path p1 = { VtxSmeared, g4SimHits, mix, simMuonCSCDigis }
    endpath outpath = { GENSIMDIGI }
}
